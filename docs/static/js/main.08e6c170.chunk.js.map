{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_this","Object","_Users_tes_Tests_projects_fbs_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_tes_Tests_projects_fbs_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_tes_Tests_projects_fbs_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","_","chain","onResize","onClickConvert","forEach","x","name","bind","_Users_tes_Tests_projects_fbs_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","value","state","editor","blueprint","json","_this2","monaco","create","lineNumbers","roundedSelection","scrollBeyondLastLine","theme","wordWrap","tabSize","setState","$","on","setTimeout","setValue","react__WEBPACK_IMPORTED_MODULE_6___default","className","id","style","width","onClick","scope","entities","map","entity","i","key","entity_number","position","y","direction","colSpan","height","layout","_this3","getValue","object","blueprintToObject","jsbeautify","JSON","stringify","indent_size","x1","minBy","y1","x2","maxBy","y2","w","h","l","canvas","attr","context","getContext","s","entitySize","hash","sha512","toString","fillStyle","concat","substring","fillRect","beginPath","strokeStyle","lineWidth","rect","stroke","closePath","parse","zlib","inflateSync","Buffer","test","console","log","Component"],"mappings":"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","file":"static/js/main.08e6c170.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport zlib from 'zlib';\nimport jsbeautify from 'js-beautify';\nimport sha512 from 'crypto-js/sha512';\n\nimport * as monaco from 'monaco-editor';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    _.chain([\n      this.onResize,\n      this.onClickConvert,\n    ]).forEach(x => this[x.name] = x.bind(this)).value();\n\n    this.state = {\n      editor: null,\n      blueprint: '',\n      json: {},\n    }\n  }\n  componentDidMount() {\n    const editor = monaco.editor.create(document.getElementById('editor'), {\n      lineNumbers: 'on',\n      roundedSelection: true,\n      scrollBeyondLastLine: true,\n      theme: 'vs-dark',\n      wordWrap: 'on',\n      tabSize: 2,\n    });\n    this.setState({ editor });\n\n    $(window).on(\"resize\", this.onResize);\n    setTimeout(() => { this.onResize(); });\n\n    // const blueprint = '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';\n    const blueprint = '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';\n    // const blueprint = '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';\n    editor.setValue(blueprint);\n    this.setState({ blueprint: blueprint });\n  }\n  render() {\n    const editorStyle = { width: '100%' };\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col col-6 m-0 p-0\">\n            <div className=\"row\">\n              <div className=\"col col-12\">\n                <div id=\"editor\" style={editorStyle}></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col col-6\">\n            <div className=\"row mt-4\">\n              <div className=\"col col-12 form-group\">\n                <button className=\"btn btn-primary form-control\" onClick={this.onClickConvert}>Convert!</button>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"col col-12\">\n                <canvas id=\"canvas\"></canvas>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"col col-12\">\n                <table className=\"table table-sm table-dark table-hover\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\"></th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">X</th>\n                      <th scope=\"col\">Y</th>\n                      <th scope=\"col\">Direction</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {\n                    this.state.json.blueprint ?\n                    this.state.json.blueprint.entities.map((entity, i) => (\n                      <tr key={i}>\n                        <th scope=\"row\">{entity.entity_number}</th>\n                        <td>{entity.name}</td>\n                        <td>{entity.position.x}</td>\n                        <td>{entity.position.y}</td>\n                        <td>{entity.direction}</td>\n                      </tr>\n                    )) : (<tr><th scope=\"row\"></th><td colSpan=\"5\">Empty.</td></tr>)\n                  }\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onResize() {\n    const width = $(window).width() / 2;\n    const height = $(window).height();\n    this.state.editor.layout({ width, height });\n  }\n  onClickConvert() {\n    const blueprint = this.state.editor.getValue();\n    const object = this.blueprintToObject(blueprint);\n    // monaco.editor.setModelLanguage(this.state.editor.getModel(), 'json');\n    this.state.editor.setValue(jsbeautify(JSON.stringify(object), { indent_size: 2 }));\n    this.setState({ object });\n\n    const x1 = _.minBy(object.blueprint.entities, entity => entity.position.x).position.x;\n    const y1 = _.minBy(object.blueprint.entities, entity => entity.position.y).position.y;\n    const x2 = _.maxBy(object.blueprint.entities, entity => entity.position.x).position.x;\n    const y2 = _.maxBy(object.blueprint.entities, entity => entity.position.y).position.y;\n    const w = x2 - x1;\n    const h = y2 - y1;\n    const l = 10;\n\n    const canvas = document.getElementById('canvas');\n    $(canvas).attr({ width: w * l, height: h * l });\n\n    setTimeout(() => {\n      const context = canvas.getContext('2d');\n\n      _.forEach(object.blueprint.entities, entity => {\n        const x = entity.position.x - x1;\n        const y = entity.position.y - y1;\n        const s = this.entitySize(entity.name, entity.direction);\n        const hash = sha512(entity.name).toString();\n        context.fillStyle = `#${hash.substring(0, 6)}`;\n        context.fillRect(x * l, y * l, s.x * l, s.y * l);\n        context.beginPath();\n        context.strokeStyle = `#${hash.substring(6, 12)}`;\n        context.lineWidth = 1;\n        context.rect(x * l, y * l, s.x * l, s.y * l);\n        context.stroke();\n        context.closePath();\n      });\n    }, 1000);\n  }\n\n  blueprintToObject(blueprint) {\n    return JSON.parse(zlib.inflateSync(new Buffer(blueprint.substring(1), 'base64')).toString());\n  }\n  entitySize(name, direction) {\n    if (/^(express-|fast-|)transport-belt$/.test(name)) {\n      return { x: 1, y: 1 };\n    } else if (/^(express-|fast-|)underground-belt$/.test(name)) {\n      return { x: 1, y: 1 };\n    } else if (/^(express-|fast-|)splitter$/.test(name)) {\n      if (direction === 2 || direction === 6) {\n        return { x: 1, y: 2 };\n      } else if (direction === 4) {\n        return { x: 2, y: 1 };\n      }\n    } else if (/^(fast-|)inserter$/.test(name)) {\n      return { x: 1, y: 1 };\n    } else if (/^long-handed-inserter$/.test(name)) {\n      if (direction === 2 || direction === 6) {\n        return { x: 1, y: 2 };\n      } else if (direction === 4) {\n        return { x: 2, y: 1 };\n      }\n    } else if (/^electric-furnace$/.test(name)) {\n      return { x: 3, y: 3 };\n    } else if (/^small-electric-pole$/.test(name)) {\n      return { x: 1, y: 1 };\n    } else if (/^big-electric-pole$/.test(name)) {\n      return { x: 2, y: 2 };\n    } else if (/^assembling-machine-\\d+$/.test(name)) {\n      return { x: 3, y: 3 };\n    } else if (/^laser-turret$/.test(name)) {\n      return { x: 2, y: 2 };\n    }\n    console.log(\"error:\", name, direction)\n    return { x: 1, y: 1 };\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}